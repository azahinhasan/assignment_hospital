{"version":3,"sources":["logo.svg","components/Question1.js","components/Question2.js","components/Question3.js","App.js","reportWebVitals.js","index.js"],"names":["Question1","props","useState","count","setCount","useEffect","patientsDataSorted","map","data","isAdmitted","countNotAdmitted","className","patientID","lastName","firstName","style","cursor","color","onClick","admittePatient","kidneyNeeded","undefined","diseases","find","e","length","Question2","patients","setPatients","showMsg","setShowMsg","addNewPatientFromOtherHospital","p","filter","d","deleteData","Question3","App","pageDataOf","setPageDataOf","SetkidneyNeeded","sort","a","b","countKendyPatient","uniqueID","rand","Math","random","floor","addNewPatientFromOtherHospitalHandler","console","log","pageData","id","newData","el","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09f451ed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nimport '../App.css';\r\nimport React,{useState,useEffect} from 'react';\r\n\r\nconst Question1=(props)=> {\r\n\r\n\r\n    const [count, setCount]=useState(0);\r\n\r\n    const countNotAdmitted=()=>{\r\n        let count = 0;\r\n        \r\n        //  data.diseases.find(e=>e=='1-kidney')!=undefined?\r\n    \r\n        props.patientsDataSorted.map(data=>{\r\n          if (!data.isAdmitted){\r\n            count++;\r\n          }\r\n        })\r\n    \r\n        setCount(count);\r\n      }\r\n\r\n\r\n\r\n      useEffect(()=>{\r\n        countNotAdmitted();\r\n      },[props.patientsDataSorted]);\r\n\r\nreturn (\r\n    <div className=\"App\">\r\n      \r\n\r\n        <h1>Question 1</h1>\r\n\r\n      <br/>\r\n\r\n      <h2>List all patients in order of their patient IDs</h2>\r\n      <br/>\r\n      <table>\r\n                \r\n          <tr>\r\n                <th>PatientID</th>\r\n                <th>LastName</th>\r\n                <th>FirstName</th>\r\n                <th>Admitted Status</th>\r\n          </tr>\r\n      { props.patientsDataSorted.map(data=>{\r\n            return(\r\n              <tr>\r\n                <td>{data.patientID}</td>\r\n                <td>{data.lastName}</td>\r\n                <td>{data.firstName}</td>\r\n                <td>{data.isAdmitted?'Admitted':'Not Admitted'}</td>\r\n              </tr>\r\n            )\r\n        })\r\n      }\r\n    </table>\r\n\r\n      <br/>\r\n\r\n      {/* ---------------------------------------------------------------------- */}\r\n\r\n\r\n      <h2>List the patients who are not admitted yet</h2>\r\n      <br/>\r\n      {count>0?\r\n        <table>      \r\n            <tr>\r\n                    <th>PatientID</th>\r\n                    <th>LastName</th>\r\n                    <th>FirstName</th>\r\n                    <th>Action</th>\r\n            </tr>\r\n        { props.patientsDataSorted.map(data=>{\r\n                return(\r\n                !data.isAdmitted?\r\n                <tr key={data.patientID}>\r\n                    <td>{data.patientID}</td>\r\n                    <td>{data.lastName}</td>\r\n                    <td>{data.firstName}</td>\r\n                    <td style={{cursor: 'default',color: 'blue'}} onClick={()=>props.admittePatient(data.patientID)}>Admitte</td>\r\n                </tr>\r\n                :null\r\n                )\r\n            })\r\n        }\r\n        </table>\r\n\r\n    :<h4 style={{color: 'green'}}>NO DATA LEFT!!!</h4>}\r\n\r\n {/* ---------------------------------------------------------------------- */}\r\n\r\n    <h2>List of the patients who require kidneys</h2>\r\n    <br/>\r\n    <h4>Total Kidney Needed: {props.kidneyNeeded}</h4>\r\n    <br/>\r\n    <table>      \r\n          <tr>\r\n                <th>PatientID</th>\r\n                <th>LastName</th>\r\n                <th>FirstName</th>\r\n          </tr>\r\n      { props.patientsDataSorted.map(data=>{\r\n            return(\r\n   \r\n              data.diseases.find(e=>e=='1-kidney')!=undefined?\r\n              \r\n              // data.diseases=='1-kidney'?\r\n                  <tr>\r\n                    <td>{data.patientID}</td>\r\n                    <td>{data.lastName}</td>\r\n                    <td>{data.firstName}</td>\r\n                  </tr>\r\n                :null\r\n            )\r\n        })\r\n      }\r\n    </table>\r\n\r\n\r\n\r\n    {/* ---------------------------------------------------------------------- */}\r\n\r\n    <br/>\r\n\r\n    <h2>List of the patients who have COVID</h2>\r\n    <br/>\r\n\r\n    <table>      \r\n          <tr>\r\n                <th>LastName</th>\r\n                <th>FirstName</th>\r\n                <th>Total Deseases</th>\r\n          </tr>\r\n      { props.patientsDataSorted.map(data=>{\r\n            return(\r\n\r\n              data.diseases.find(e=>e=='COVID')!=undefined?\r\n                  <tr>\r\n                    <td>{data.lastName}</td>\r\n                    <td>{data.firstName}</td>\r\n                    <td>{data.diseases.length} {data.diseases.length>1?'diseases':'disease'}</td>\r\n                  </tr>\r\n                :null\r\n            )\r\n        })\r\n      }\r\n    </table>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Question1;\r\n","\r\nimport '../App.css';\r\nimport React,{useState,useEffect} from 'react';\r\n\r\nconst Question2=(props)=> {\r\n\r\n  const [patients,setPatients]=useState([\r\n    { firstName: \"Agent\", lastName: \"Pena\",diseases: [\"COVID\"]},\r\n    { firstName: \"Heisenberg\", lastName: \"Bear\",diseases: [\"Headache\"]},\r\n    { firstName: \"Okarin\", lastName: \"May\",diseases: [\"Broken Wrist\", \"Mad-scientist\"]},\r\n    { firstName: \"Hououin\", lastName: \"Kyoma\",diseases: [\"Delusional disorder\", \"Memory loss\"]}\r\n  ]);\r\n\r\n  const [showMsg,setShowMsg]=useState(false);\r\n\r\n\r\n    const deleteData=(data)=>{\r\n        setShowMsg(true);\r\n        props.addNewPatientFromOtherHospital(data);\r\n        const p = patients.filter(d => d!=data);\r\n\r\n        setPatients(p);\r\n    }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    \r\n    <h1>Question 3</h1>\r\n    <br/>\r\n\r\n    <h2>List the patients who are not admitted yet</h2>\r\n      <br/>\r\n    {patients.length>0?\r\n      <table>      \r\n          <tr>\r\n                <th>LastName</th>\r\n                <th>FirstName</th>\r\n                <th>Action</th>\r\n          </tr>\r\n\r\n\r\n      {patients.map(data=>{\r\n            return(\r\n              <tr>\r\n                <td>{data.lastName}</td>\r\n                <td>{data.firstName}</td>\r\n                <td \r\n                    style={{cursor: 'default',color: 'blue'}}\r\n                    onClick={()=>deleteData(data)}\r\n                    \r\n                    >ADD</td>\r\n              </tr>\r\n            )\r\n        })}\r\n        </table>\r\n\r\n\r\n        :<h4 style={{color: 'green'}}>NO DATA LEFT!!!</h4>}\r\n\r\n\r\n      {/* --------------------------------------------------------------- */}\r\n\r\n    {/* <h2>List all patients in order of their patient IDs</h2>\r\n      <br/>\r\n      <table>\r\n                \r\n          <tr>\r\n                <th>PatientID</th>\r\n                <th>LastName</th>\r\n                <th>FirstName</th>\r\n                <th>Admitted Status</th>\r\n          </tr>\r\n      { props.patientsDataSorted.map(data=>{\r\n            return(\r\n              <tr>\r\n                <td>{data.patientID}</td>\r\n                <td>{data.lastName}</td>\r\n                <td>{data.firstName}</td>\r\n                <td>{data.isAdmitted?'Admitted':'Not Admitted'}</td>\r\n              </tr>\r\n            )\r\n        })\r\n      }\r\n    </table> */}\r\n\r\n\r\n      {showMsg?<div style={{color: 'red'}}>\r\n\r\n        <h4>P.S: Data ADDED! Plaese go to Question-1 tab to check the update.</h4>\r\n        <h4>Donn't reload the page. Othewise it will reset everything!</h4>\r\n      </div>:null}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Question2;\r\n","\r\nimport '../App.css';\r\nimport React,{useState,useEffect} from 'react';\r\n\r\nconst Question3=(props)=> {\r\n\r\n  const [patients,setPatients]=useState([\r\n    { firstName: \"Agent\", lastName: \"Pena\",diseases: [\"COVID\"]},\r\n    { firstName: \"Heisenberg\", lastName: \"Bear\",diseases: [\"Headache\"]},\r\n    { firstName: \"Okarin\", lastName: \"May\",diseases: [\"Broken Wrist\", \"Mad-scientist\"]},\r\n    { firstName: \"Hououin\", lastName: \"Kyoma\",diseases: [\"Delusional disorder\", \"Memory loss\"]}\r\n  ]);\r\n\r\n  const [showMsg,setShowMsg]=useState(false);\r\n\r\n\r\n    const deleteData=(data)=>{\r\n        setShowMsg(true);\r\n        props.addNewPatientFromOtherHospital(data);\r\n        const p = patients.filter(d => d!=data);\r\n\r\n        setPatients(p);\r\n    }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    \r\n    <h1>Question 3</h1>\r\n    <br/>\r\n\r\n    <h2>List the patients from another hospital</h2>\r\n      <br/>\r\n    {patients.length>0?\r\n      <table>      \r\n          <tr>\r\n                <th>LastName</th>\r\n                <th>FirstName</th>\r\n                <th>Action</th>\r\n          </tr>\r\n\r\n\r\n      {patients.map(data=>{\r\n            return(\r\n              <tr>\r\n                <td>{data.lastName}</td>\r\n                <td>{data.firstName}</td>\r\n                <td \r\n                    style={{cursor: 'default',color: 'blue'}}\r\n                    onClick={()=>deleteData(data)}\r\n                    \r\n                    >ADD</td>\r\n              </tr>\r\n            )\r\n        })}\r\n        </table>\r\n\r\n\r\n        :<h4 style={{color: 'green'}}>NO DATA LEFT!!!</h4>}\r\n\r\n\r\n      {/* --------------------------------------------------------------- */}\r\n\r\n    {/* <h2>List all patients in order of their patient IDs</h2>\r\n      <br/>\r\n      <table>\r\n                \r\n          <tr>\r\n                <th>PatientID</th>\r\n                <th>LastName</th>\r\n                <th>FirstName</th>\r\n                <th>Admitted Status</th>\r\n          </tr>\r\n      { props.patientsDataSorted.map(data=>{\r\n            return(\r\n              <tr>\r\n                <td>{data.patientID}</td>\r\n                <td>{data.lastName}</td>\r\n                <td>{data.firstName}</td>\r\n                <td>{data.isAdmitted?'Admitted':'Not Admitted'}</td>\r\n              </tr>\r\n            )\r\n        })\r\n      }\r\n    </table> */}\r\n\r\n\r\n      {showMsg?<div style={{color: 'red'}}>\r\n\r\n        <h4>P.S: Data ADDED! Plaese go to Question-1 tab to check the update.</h4>\r\n        <h4>Donn't reload the page. Othewise it will reset everything!</h4>\r\n      </div>:null}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Question3;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport React,{useState,useEffect} from 'react';\nimport Qustion1 from './components/Question1';\nimport Qustion2 from './components/Question2';\nimport Qustion3 from './components/Question3';\n\nconst App=()=> {\n  let a=1;\n  const kidneysInStock = 5;\n  const [patients,setPatients]=useState([\n    { firstName: \"Shakira\", lastName: \"Hossain\",patientID: \"007\",diseases: [\"COVID\", \"1-kidney\", \"3/4-dissolved-brain\"],isAdmitted: true},\n    { firstName: \"Uzumaki\", lastName: \"Naruto\",patientID: \"008\",diseases: [\"Obesity\"],isAdmitted: true},\n    { firstName: \"Sheikh\", lastName: \"Selim Ahmed\",patientID: \"006\",diseases: [\"Broken heart\", \"Depression\"],isAdmitted: true},\n    { firstName: \"Rafsan\", lastName: \"Wayne\",patientID: \"009\",diseases: [\"COVID\", \"1-kidney\", \"Impaired vision\"],isAdmitted: false}\n  ]);\n\n  const [pageDataOf, setPageDataOf]=useState('Qustion1');\n\n  const [kidneyNeeded,SetkidneyNeeded]=useState('0');\n\n  var patientsDataSorted = [...patients];\n  patientsDataSorted.sort((a,b) => a.patientID - b.patientID);\n  //sorting by patientID\n\n  \n\n\n  const admittePatient=(id)=>{\n    const isAdmitted= true;\n    let newData = patients.map(el => (el.patientID === id ? {...el, isAdmitted} : el));\n\n    setPatients(newData);\n  }\n\n  const countKendyPatient=()=>{\n    let count = 0;\n    \n    //  data.diseases.find(e=>e=='1-kidney')!=undefined?\n\n    patients.map(data=>{\n      if (data.diseases.find(e=>e=='1-kidney')!=undefined){\n        count++;\n      }\n    })\n\n    SetkidneyNeeded(count);\n  }\n\n  const uniqueID=()=>{\n    const min = 100;\n    const max = 999;\n    const rand = min + Math.random() * (max - min);\n\n    return Math.floor(rand);\n\n  }\n\n  const addNewPatientFromOtherHospitalHandler=(data)=>{\n\n    // let d= [{patientID:50,isAdmitted: true}]\n    // let newPa=[...d,data];\n\n\n   setPatients([{firstName: data.firstName, lastName:data.lastName,patientID: uniqueID(),diseases: data.diseases,isAdmitted: true},...patients]);\n\n\n    console.log(patients);\n  }\n\n\n  useEffect(()=>{\n    countKendyPatient();\n  },[]);\n\n  useEffect(()=>{\n    countKendyPatient();\n  },[patients]);\n\n\n  let pageData='';\n\n  if(pageDataOf=='Qustion1'){\n    pageData= <Qustion1 patientsDataSorted={patientsDataSorted} kidneyNeeded={kidneyNeeded} admittePatient={admittePatient}/>;\n  }\n  else if(pageDataOf=='Qustion2'){\n    pageData=<Qustion2 patientsDataSorted={patientsDataSorted} addNewPatientFromOtherHospital={addNewPatientFromOtherHospitalHandler}/>;\n  }\nelse{\n  pageData=<Qustion3 patientsDataSorted={patientsDataSorted} addNewPatientFromOtherHospital={addNewPatientFromOtherHospitalHandler}/>;\n}\n\n\n  return (\n    <div className=\"App\">\n      \n      <button onClick={()=>setPageDataOf('Qustion1')}>Qustion1</button>\n      <button onClick={()=>setPageDataOf('Qustion2')}>Qustion2</button>\n      <button onClick={()=>setPageDataOf('Qustion3')}>Qustion3</button>\n\n      {pageData}\n\n     \n\n      \n\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}