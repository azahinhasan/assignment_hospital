(this.webpackJsonpassignment_hospital=this.webpackJsonpassignment_hospital||[]).push([[0],{14:function(t,e,c){},16:function(t,e,c){"use strict";c.r(e);var s=c(1),n=c.n(s),i=c(9),a=c.n(i),r=(c(14),c(8)),j=c(3),d=c(2),o=(c.p,c(5),c(0)),l=function(t){var e=Object(s.useState)(0),c=Object(d.a)(e,2),n=c[0],i=c[1];return Object(s.useEffect)((function(){!function(){var e=0;t.patientsDataSorted.map((function(t){t.isAdmitted||e++})),i(e)}()}),[t.patientsDataSorted]),Object(o.jsxs)("div",{className:"App",children:[Object(o.jsx)("h1",{children:"Question 1"}),Object(o.jsx)("br",{}),Object(o.jsx)("h2",{children:"List all patients in order of their patient IDs"}),Object(o.jsx)("br",{}),Object(o.jsxs)("table",{children:[Object(o.jsxs)("tr",{children:[Object(o.jsx)("th",{children:"PatientID"}),Object(o.jsx)("th",{children:"LastName"}),Object(o.jsx)("th",{children:"FirstName"}),Object(o.jsx)("th",{children:"Admitted Status"})]}),t.patientsDataSorted.map((function(t){return Object(o.jsxs)("tr",{children:[Object(o.jsx)("td",{children:t.patientID}),Object(o.jsx)("td",{children:t.lastName}),Object(o.jsx)("td",{children:t.firstName}),Object(o.jsx)("td",{children:t.isAdmitted?"Admitted":"Not Admitted"})]})}))]}),Object(o.jsx)("br",{}),Object(o.jsx)("h2",{children:"List the patients who are not admitted yet"}),Object(o.jsx)("br",{}),n>0?Object(o.jsxs)("table",{children:[Object(o.jsxs)("tr",{children:[Object(o.jsx)("th",{children:"PatientID"}),Object(o.jsx)("th",{children:"LastName"}),Object(o.jsx)("th",{children:"FirstName"}),Object(o.jsx)("th",{children:"Action"})]}),t.patientsDataSorted.map((function(e){return e.isAdmitted?null:Object(o.jsxs)("tr",{children:[Object(o.jsx)("td",{children:e.patientID}),Object(o.jsx)("td",{children:e.lastName}),Object(o.jsx)("td",{children:e.firstName}),Object(o.jsx)("td",{style:{cursor:"default",color:"blue"},onClick:function(){return t.admittePatient(e.patientID)},children:"Admitte"})]},e.patientID)}))]}):Object(o.jsx)("h4",{style:{color:"green"},children:"NO DATA LEFT!!!"}),Object(o.jsx)("h2",{children:"List of the patients who require kidneys"}),Object(o.jsx)("br",{}),Object(o.jsxs)("h4",{children:["Total Kidney Needed: ",t.kidneyNeeded]}),Object(o.jsx)("br",{}),Object(o.jsxs)("table",{children:[Object(o.jsxs)("tr",{children:[Object(o.jsx)("th",{children:"PatientID"}),Object(o.jsx)("th",{children:"LastName"}),Object(o.jsx)("th",{children:"FirstName"})]}),t.patientsDataSorted.map((function(t){return void 0!=t.diseases.find((function(t){return"1-kidney"==t}))?Object(o.jsxs)("tr",{children:[Object(o.jsx)("td",{children:t.patientID}),Object(o.jsx)("td",{children:t.lastName}),Object(o.jsx)("td",{children:t.firstName})]}):null}))]}),Object(o.jsx)("br",{}),Object(o.jsx)("h2",{children:"List of the patients who have COVID"}),Object(o.jsx)("br",{}),Object(o.jsxs)("table",{children:[Object(o.jsxs)("tr",{children:[Object(o.jsx)("th",{children:"LastName"}),Object(o.jsx)("th",{children:"FirstName"}),Object(o.jsx)("th",{children:"Total Deseases"})]}),t.patientsDataSorted.map((function(t){return void 0!=t.diseases.find((function(t){return"COVID"==t}))?Object(o.jsxs)("tr",{children:[Object(o.jsx)("td",{children:t.lastName}),Object(o.jsx)("td",{children:t.firstName}),Object(o.jsxs)("td",{children:[t.diseases.length," ",t.diseases.length>1?"diseases":"disease"]})]}):null}))]})]})},h=function(t){var e=Object(s.useState)([{doctorID:"6215",firstName:"Jalaluddin",lastName:"Mahbub",teamID:"008",doctorType:"Consultant",email:"jabub@hospital.com",active:!0,doctorRequests:[]},{doctorID:"6216",firstName:"Amin",lastName:"Morshed",teamID:"008",doctorType:"Assistant Consultant",email:"amhed@hospital.com",active:!0},{doctorID:"6214",firstName:"Mahady",lastName:"Selim",teamID:"005",doctorType:"Consultant",email:"malim@hospital.com",active:!0,doctorRequests:["6213"]},{doctorID:"6213",firstName:"Jamela",lastName:"Begum",teamID:"005",doctorType:"RMO",email:"jagum@hospital.com",active:!1}]),c=Object(d.a)(e,2),n=c[0],i=c[1],a=Object(s.useState)([{teamName:"nephrology",teamID:"008",consultantInCharge:"6215",teamMates:["6216"]},{teamName:"cardiology",teamID:"005",consultantInCharge:"6214",teamMates:[]}]),r=Object(d.a)(a,2),l=(r[0],r[1],Object(j.a)(n));l.sort((function(t,e){return t.doctorID-e.doctorID}));var h=Object(s.useState)(""),b=Object(d.a)(h,2),O=b[0],u=b[1],m=Object(s.useState)(""),x=Object(d.a)(m,2),f=x[0],p=x[1],D=Object(s.useState)(""),N=Object(d.a)(D,2),I=N[0],g=N[1],v=Object(s.useState)([]),y=Object(d.a)(v,2),S=y[0],A=y[1],C=function(){if("Consultant"==localStorage.getItem("doctorType"))if(""==f||""==I)u("Text box is Empty!! Please fill up");else{var t=function(){var t=6217+83*Math.random();return Math.floor(t)}(),e=f.slice(0,2)+I.slice(0,3)+"@hospital.com",c=[{doctorID:t,firstName:f,lastName:I,teamID:"none",doctorType:"RMO",email:e,active:!1}].concat(Object(j.a)(n));u("New doctor Added!");var s=[];n.map((function(t){t.doctorID==localStorage.getItem("doctorID")?s=t:console.log(t.doctorRequests)})),s.doctorRequests.push(t);var a=c.filter((function(t){return t.doctorID!=localStorage.getItem("doctorID")}));i([s].concat(Object(j.a)(a)))}else u("Failed!!...Only Consultant Type Doctor can add new Doctor!")};return Object(s.useEffect)((function(){localStorage.setItem("doctorID",6215),localStorage.setItem("doctorType","Consultant"),localStorage.setItem("teamID","008"),n.map((function(t){t.doctorID==localStorage.getItem("doctorID")?A(t.doctorRequests):console.log(t.doctorRequests)}))}),[]),Object(o.jsxs)("div",{className:"App",children:[Object(o.jsx)("h1",{children:"Question 2"}),Object(o.jsx)("br",{}),Object(o.jsx)("h2",{children:"List all Doctor sroted by ID"}),Object(o.jsx)("br",{}),Object(o.jsxs)("table",{children:[Object(o.jsxs)("tr",{children:[Object(o.jsx)("th",{children:"doctorID"}),Object(o.jsx)("th",{children:"firstName"}),Object(o.jsx)("th",{children:"lastName"}),Object(o.jsx)("th",{children:"teamID"}),Object(o.jsx)("th",{children:"doctorType"}),Object(o.jsx)("th",{children:"email"}),Object(o.jsx)("th",{children:"active status"})]}),l.map((function(t){return Object(o.jsxs)("tr",{children:[Object(o.jsx)("td",{children:t.doctorID}),Object(o.jsx)("td",{children:t.firstName}),Object(o.jsx)("td",{children:t.lastName}),Object(o.jsx)("td",{children:t.teamID}),Object(o.jsx)("td",{children:t.doctorType}),Object(o.jsx)("td",{children:t.email}),Object(o.jsx)("td",{children:t.active?"Active":"Not Active"})]})}))]}),Object(o.jsx)("h2",{children:"Add New Doctor"}),Object(o.jsx)("br",{}),Object(o.jsx)("p",{children:"[P.S. I store DoctorID(6215) and Type(Consultant) in the loacal storage. Assuming that he is logged in.]"}),Object(o.jsxs)("div",{children:[Object(o.jsxs)("table",{children:[Object(o.jsxs)("tr",{children:[Object(o.jsx)("th",{children:"FirstName"}),Object(o.jsx)("th",{children:"LastName"}),Object(o.jsx)("th",{children:"Type"}),Object(o.jsx)("th",{children:"Action"})]}),Object(o.jsxs)("tr",{children:[Object(o.jsx)("td",{children:Object(o.jsx)("input",{onChange:function(t){return p(t.target.value)}})}),Object(o.jsx)("td",{children:Object(o.jsx)("input",{onChange:function(t){return g(t.target.value)}})}),Object(o.jsx)("td",{children:"RMO"}),Object(o.jsx)("td",{onClick:function(){return C()},children:"ADD"})]})]}),Object(o.jsx)("h5",{children:O})]}),Object(o.jsx)("br",{}),Object(o.jsxs)("h2",{children:["Doctor Request of ",localStorage.getItem("doctorID")]}),Object(o.jsx)("br",{}),Object(o.jsxs)("table",{children:[Object(o.jsxs)("tr",{children:[Object(o.jsx)("th",{children:"doctorRequests"}),Object(o.jsx)("th",{children:"active status"})]}),S.map((function(t){return Object(o.jsxs)("tr",{children:[Object(o.jsx)("td",{children:t}),Object(o.jsx)("td",{onClick:function(){},children:"ADD to TEAM"})]})}))]}),Object(o.jsxs)("h2",{children:["Teams Members of ",localStorage.getItem("teamID")]}),Object(o.jsx)("br",{}),Object(o.jsxs)("table",{children:[Object(o.jsxs)("tr",{children:[Object(o.jsx)("th",{children:"DoctorID"}),Object(o.jsx)("th",{children:"FirstName"}),Object(o.jsx)("th",{children:"LastName"}),Object(o.jsx)("th",{children:"DoctorType"}),Object(o.jsx)("th",{children:"Email"}),Object(o.jsx)("th",{children:"Active"})]}),l.map((function(t){return t.teamID==localStorage.getItem("teamID")?Object(o.jsxs)("tr",{children:[Object(o.jsx)("td",{children:t.doctorID}),Object(o.jsx)("td",{children:t.firstName}),Object(o.jsx)("td",{children:t.lastName}),Object(o.jsx)("td",{children:t.doctorType}),Object(o.jsx)("td",{children:t.email}),Object(o.jsx)("td",{children:"REMOVE | PROMOTION"})]}):null}))]})]})},b=function(t){var e=Object(s.useState)([{firstName:"Agent",lastName:"Pena",diseases:["COVID"]},{firstName:"Heisenberg",lastName:"Bear",diseases:["Headache"]},{firstName:"Okarin",lastName:"May",diseases:["Broken Wrist","Mad-scientist"]},{firstName:"Hououin",lastName:"Kyoma",diseases:["Delusional disorder","Memory loss"]}]),c=Object(d.a)(e,2),n=c[0],i=c[1],a=Object(s.useState)(!1),r=Object(d.a)(a,2),j=r[0],l=r[1];return Object(o.jsxs)("div",{className:"App",children:[Object(o.jsx)("h1",{children:"Question 3"}),Object(o.jsx)("br",{}),Object(o.jsx)("h2",{children:"List the patients from another hospital"}),Object(o.jsx)("br",{}),n.length>0?Object(o.jsxs)("table",{children:[Object(o.jsxs)("tr",{children:[Object(o.jsx)("th",{children:"LastName"}),Object(o.jsx)("th",{children:"FirstName"}),Object(o.jsx)("th",{children:"Action"})]}),n.map((function(e){return Object(o.jsxs)("tr",{children:[Object(o.jsx)("td",{children:e.lastName}),Object(o.jsx)("td",{children:e.firstName}),Object(o.jsx)("td",{style:{cursor:"default",color:"blue"},onClick:function(){return function(e){l(!0),t.addNewPatientFromOtherHospital(e);var c=n.filter((function(t){return t!=e}));i(c)}(e)},children:"ADD"})]})}))]}):Object(o.jsx)("h4",{style:{color:"green"},children:"NO DATA LEFT!!!"}),j?Object(o.jsxs)("div",{style:{color:"red"},children:[Object(o.jsx)("h4",{children:"P.S: Data ADDED! Plaese go to Question-1 tab to check the update."}),Object(o.jsx)("h4",{children:"Donn't reload the page. Othewise it will reset everything!"})]}):null]})},O=function(){var t=Object(s.useState)([{firstName:"Shakira",lastName:"Hossain",patientID:"007",diseases:["COVID","1-kidney","3/4-dissolved-brain"],isAdmitted:!0},{firstName:"Uzumaki",lastName:"Naruto",patientID:"008",diseases:["Obesity"],isAdmitted:!0},{firstName:"Sheikh",lastName:"Selim Ahmed",patientID:"006",diseases:["Broken heart","Depression"],isAdmitted:!0},{firstName:"Rafsan",lastName:"Wayne",patientID:"009",diseases:["COVID","1-kidney","Impaired vision"],isAdmitted:!1}]),e=Object(d.a)(t,2),c=e[0],n=e[1],i=Object(s.useState)("Qustion1"),a=Object(d.a)(i,2),O=a[0],u=a[1],m=Object(s.useState)("0"),x=Object(d.a)(m,2),f=x[0],p=x[1],D=Object(j.a)(c);D.sort((function(t,e){return t.patientID-e.patientID}));var N=function(){var t=0;c.map((function(e){void 0!=e.diseases.find((function(t){return"1-kidney"==t}))&&t++})),p(t)},I=function(){var t=100+899*Math.random();return Math.floor(t)},g=function(t){n([{firstName:t.firstName,lastName:t.lastName,patientID:I(),diseases:t.diseases,isAdmitted:!0}].concat(Object(j.a)(c))),console.log(c)};Object(s.useEffect)((function(){N()}),[]),Object(s.useEffect)((function(){N()}),[c]);var v="";return v="Qustion1"==O?Object(o.jsx)(l,{patientsDataSorted:D,kidneyNeeded:f,admittePatient:function(t){var e=c.map((function(e){return e.patientID===t?Object(r.a)(Object(r.a)({},e),{},{isAdmitted:!0}):e}));n(e)}}):"Qustion2"==O?Object(o.jsx)(h,{patientsDataSorted:D,addNewPatientFromOtherHospital:g}):Object(o.jsx)(b,{patientsDataSorted:D,addNewPatientFromOtherHospital:g}),Object(o.jsxs)("div",{className:"App",children:[Object(o.jsx)("button",{onClick:function(){return u("Qustion1")},children:"Qustion1"}),Object(o.jsx)("button",{onClick:function(){return u("Qustion2")},children:"Qustion2"}),Object(o.jsx)("button",{onClick:function(){return u("Qustion3")},children:"Qustion3"}),v]})},u=function(t){t&&t instanceof Function&&c.e(3).then(c.bind(null,17)).then((function(e){var c=e.getCLS,s=e.getFID,n=e.getFCP,i=e.getLCP,a=e.getTTFB;c(t),s(t),n(t),i(t),a(t)}))};a.a.render(Object(o.jsx)(n.a.StrictMode,{children:Object(o.jsx)(O,{})}),document.getElementById("root")),u()},5:function(t,e,c){}},[[16,1,2]]]);
//# sourceMappingURL=main.d37a5d44.chunk.js.map